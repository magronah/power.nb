% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_size_cal.R
\name{power_fun_ss}
\alias{power_fun_ss}
\title{#######################################################################
inverse_fun <- function(target,lmb,abs_lfc, model,xmin, xmax) {}
\usage{
power_fun_ss(
  deseq_est_list,
  true_logfoldchange,
  true_logmean,
  sample_vec,
  alpha_level = 0.1,
  notu
)
}
\description{
if (length(target) != length(lmb) || length(target) != length(abs_lfc)) {
stop("Lengths of 'target', 'lmb', and 'abs_lfc' must be the same.")
}
}
\section{Initialize an empty list to store the roots}{
roots <- list()

roots <- list()

roots <- list()
}

\section{Loop through each element and solve for the root}{
for (i in 1:length(target)) {
roots[\link{i}] <- uniroot(function(s) {
predict(model,
type = "response",
newdata = data.frame(sample_size = s,
lmean_abund = lmb\link{i},
abs_lfc = abs_lfc\link{i})
) - target\link{i}
},
interval = c(xmin, xmax),
extendInt = "yes")$root
}

unlist(roots)
}

uniroot_lmb =  function(target_power,sample_size,abs_lfc,model,xmin,xmax){

root <- uniroot(function(lmb) {
predict(model,
type = "response",
newdata = data.frame(sample_size = sample_size,
lmean_abund = lmb,
abs_lfc = abs_lfc)
) - target_power
},
interval = c(xmin, xmax),
extendInt = "yes")$root
root
}

inverse_lfc <- function(target,lmb,samp_size, model,xmin, xmax) {

if (length(target) != length(lmb) || length(target) != length(samp_size)) {
stop("Lengths of 'target', 'lmb', and 'abs_lfc' must be the same.")
}

for (i in 1:length(target)) {
roots[\link{i}] <- uniroot(function(s) {
predict(model,
type = "response",
newdata = data.frame(sample_size =  samp_size\link{i},
lmean_abund =  lmb\link{i},
abs_lfc     =  s)
) - target\link{i}
},
interval = c(xmin, xmax),
extendInt = "yes")$root
}

unlist(roots)
}

inverse_lmb <- function(target,abs_lfc,samp_size, model,xmin, xmax) {

if (length(target) != length(abs_lfc) || length(target) != length(samp_size)) {
stop("Lengths of 'target', 'lmb', and 'abs_lfc' must be the same.")
}


}

\section{Function to compute the missing input}{

}

